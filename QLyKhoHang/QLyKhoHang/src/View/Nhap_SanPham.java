/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/Application.java to edit this template
 */
package View;

import ConnectDatabase.Connect;
import DAO.PhieuNhapDAO;
import DAO.SPNhapDAO;
import DAO.SanPhamDAO;
import Entity.SpNhap;
import static ExportExcel.ExportExcel.exportExcel;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author MRSTHAO
 */
public class Nhap_SanPham extends javax.swing.JFrame {

    /**
     * Creates new form Nhap_SanPham
     */
    public boolean CheckInput(){
        return !(NameSP_TextField.getText().equals("")||
                Quantity_In_TextField.getText().equals(""));
    }
    public void JTable_ConnectDb(){
        try {
            String query = "SELECT * FROM sp_nhap INNER JOIN sanpham ON sp_nhap.maSP = sanpham.id WHERE maPhieuNhap = "+idPhieuNhap;
            Connection cnt = Connect.getConnection();
            Statement stm = cnt.createStatement();
            ResultSet rs = stm.executeQuery(query);
            DefaultTableModel model=(DefaultTableModel) NhapSP_Table.getModel();
            
            while (rs.next()){
                Object objList[] = {
                    rs.getInt("id"),
                    rs.getInt("sp_nhap.maSP"),
                    rs.getString("name"),
                    rs.getInt("quantity_in"),
                    rs.getInt("sanpham.price"),
                    rs.getInt("quantity_in") * rs.getInt("sanpham.price")
                };
                model.addRow(objList);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    public void Reload_View(){
        IdPhieuNhap_Label.setText(idPhieuNhap+"");
        try{
            String query = "SELECT * FROM phieunhap INNER JOIN users ON phieunhap.userId = users.id WHERE phieunhap.id = "+idPhieuNhap;
            Connection cnt = Connect.getConnection();
            Statement stm = cnt.createStatement();
            ResultSet rs = stm.executeQuery(query);
            
            while(rs.next()){
                UserName_Label.setText(rs.getString("username"));
                DateIn_Label.setText(rs.getDate("dateIn").toString());
                SumPayment_Label.setText(String.valueOf(rs.getInt("sumPayment")));
            }
            
        }catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
        
        NameSP_TextField.setText("");
        Quantity_In_TextField.setText("");
        //Remove all row of jtable and connect again;
        DefaultTableModel dm = (DefaultTableModel) NhapSP_Table.getModel();
        int rowCount = dm.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
        JTable_ConnectDb();
    }
    public Nhap_SanPham() {
        initComponents();
    }
    int idPhieuNhap;
    Nhap_SanPham(int idPN){
        this.idPhieuNhap = idPN;
        initComponents();
        Reload_View();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        IdPhieuNhap_Label = new javax.swing.JLabel();
        DateIn_Label = new javax.swing.JLabel();
        UserName_Label = new javax.swing.JLabel();
        SumPayment_Label = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        NhapSP_Table = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        NameSP_TextField = new javax.swing.JTextField();
        Quantity_In_TextField = new javax.swing.JTextField();
        Insert_Button = new javax.swing.JButton();
        Delete_Button = new javax.swing.JButton();
        Excel_Button = new javax.swing.JButton();
        Update_Button = new javax.swing.JButton();
        MesSoLuong_Label = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("THÔNG TIN PHIẾU NHẬP");

        jLabel2.setText("Mã phiếu nhập");

        jLabel3.setText("Ngày nhập");

        jLabel4.setText("Người nhập");

        jLabel5.setText("Tổng tiền hàng");

        IdPhieuNhap_Label.setText("0000");

        DateIn_Label.setText("0000");

        UserName_Label.setText("0000");

        SumPayment_Label.setText("0000");

        NhapSP_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Mã sản phẩm", "Tên sản phẩm", "Số lượng", "Giá", "Thành tiền"
            }
        ));
        NhapSP_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NhapSP_TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(NhapSP_Table);

        jLabel10.setText("Tên sản phẩm");

        jLabel11.setText("Số lượng");

        Quantity_In_TextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Quantity_In_TextFieldKeyPressed(evt);
            }
        });

        Insert_Button.setText("Thêm");
        Insert_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Insert_ButtonActionPerformed(evt);
            }
        });

        Delete_Button.setText("Xóa");
        Delete_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_ButtonActionPerformed(evt);
            }
        });

        Excel_Button.setText("Xuất");
        Excel_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Excel_ButtonActionPerformed(evt);
            }
        });

        Update_Button.setText("Sửa");
        Update_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_ButtonActionPerformed(evt);
            }
        });

        MesSoLuong_Label.setText("    ");

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.setDisplayedMnemonicIndex(5);
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("Cut");
        editMenu.add(cutMenuItem);

        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("Copy");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText("Paste");
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setMnemonic('d');
        deleteMenuItem.setText("Delete");
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentsMenuItem.setMnemonic('c');
        contentsMenuItem.setText("Contents");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(33, 33, 33)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 724, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(304, 304, 304)
                            .addComponent(jLabel1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MesSoLuong_Label)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(NameSP_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Quantity_In_TextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Insert_Button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Update_Button))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Delete_Button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Excel_Button)))
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel5)
                                .addComponent(jLabel4))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(22, 22, 22)
                                    .addComponent(jLabel3))))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(UserName_Label)
                                .addComponent(SumPayment_Label))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(DateIn_Label)
                                .addComponent(IdPhieuNhap_Label)))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel1)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(NameSP_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(Quantity_In_TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(MesSoLuong_Label))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(IdPhieuNhap_Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DateIn_Label)
                        .addGap(7, 7, 7)
                        .addComponent(UserName_Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SumPayment_Label))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Update_Button)
                            .addComponent(Insert_Button))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Delete_Button)
                            .addComponent(Excel_Button))))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        int yes_no = JOptionPane.showConfirmDialog(this, "Thoát chương trình ?","Thoát",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(yes_no == JOptionPane.YES_OPTION){
            System.exit(0);
        }
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void Quantity_In_TextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Quantity_In_TextFieldKeyPressed
        // TODO add your handling code here:
        String value = Quantity_In_TextField.getText();
        MesSoLuong_Label.setForeground(Color.RED);
        int l = value.length();
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' || evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            Quantity_In_TextField.setEditable(true);
            MesSoLuong_Label.setText("");
        } else {
            Quantity_In_TextField.setEditable(false);
            MesSoLuong_Label.setText("Chỉ nhập số(0-9)");
        }
    }//GEN-LAST:event_Quantity_In_TextFieldKeyPressed

    private void Insert_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Insert_ButtonActionPerformed
        // TODO add your handling code here:
        if(CheckInput()){
            boolean isOk=true;
            //maSP or id of SanPham
            String name = NameSP_TextField.getText();
            int idSP = SanPhamDAO.getIdByName(name);
            if(idSP == -1){
                int yes_no = JOptionPane.showConfirmDialog(this, "Không tồn tại sản phẩm này trong kho\nBạn có muốn thêm sản phẩm mới vào kho ?","Thêm sản phẩm",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
                if(yes_no == JOptionPane.YES_OPTION){
                    QLySanPham qlSanPham_View = new QLySanPham();
                    qlSanPham_View.setVisible(rootPaneCheckingEnabled);
                    qlSanPham_View.setDefaultCloseOperation(HIDE_ON_CLOSE);
                }else isOk = false;
            }
            //Id phieuNhap
            int maPhieuNhap = Integer.parseInt(IdPhieuNhap_Label.getText());
            //số lượng
            int quantity_in = Integer.parseInt( Quantity_In_TextField.getText());
            //id for SP_Nhap 
            int id = -1;
            String queryId = "SELECT MAX(id) FROM SP_Nhap";
            try {
                Connection cnt = Connect.getConnection();
                Statement stm = cnt.createStatement();
                ResultSet rs = stm.executeQuery(queryId);
                while(rs.next()){
                    id = rs.getInt("MAX(id)");
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
            id++;
            //price = solg * SanPham.price (giá của sp)
            float price = quantity_in * SanPhamDAO.getPriceById(idSP);        
            //insert (tồn tại tồn tại hàng và đủ số lượng mới cho nhập)
            if(isOk){
                int rs = SPNhapDAO.insert(id, quantity_in, price, idSP, maPhieuNhap);
                if (1 == rs){
                    JOptionPane.showMessageDialog(null,"Thêm thành công !");
                    int rsUpdate = PhieuNhapDAO.update(maPhieuNhap);
                    if (1 == rsUpdate)
                        JOptionPane.showMessageDialog(null,"Cập nhật phiếu thành công !");
                    else 
                        JOptionPane.showMessageDialog(null,"Cập nhật không thành công");
                }
                else 
                    JOptionPane.showMessageDialog(null,"Lỗi");
                Reload_View();
            }
        } else JOptionPane.showMessageDialog(null,"Vui lòng nhập đủ thông tin");
    }//GEN-LAST:event_Insert_ButtonActionPerformed

    private void Delete_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_ButtonActionPerformed
        // TODO add your handling code here:
        int yes_no = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn không ?","Xác nhận xóa",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(yes_no == JOptionPane.YES_OPTION){
            if(!NhapSP_Table.getSelectionModel().isSelectionEmpty()){ 
                int i = NhapSP_Table.getSelectedRow();
                TableModel model = NhapSP_Table.getModel();
                int id =(int) model.getValueAt(i, 0);
                SpNhap sp_pn = SPNhapDAO.getById(id);
                if(sp_pn != null){
                    int rs = SPNhapDAO.deleteById(id,Integer.parseInt(IdPhieuNhap_Label.getText()));
                    if (1 == rs)
                        JOptionPane.showMessageDialog(null,"Xóa thành công !");
                    else 
                        JOptionPane.showMessageDialog(null,"Lỗi");
                    Reload_View();
                }else JOptionPane.showMessageDialog(null,"Ko tìm thấy sp_nhap mã id:"+id);
            
            }else JOptionPane.showMessageDialog(null,"Vui lòng chọn ");
        }
    }//GEN-LAST:event_Delete_ButtonActionPerformed

    private void Update_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_ButtonActionPerformed
        // TODO add your handling code here:
        if(CheckInput()){
            if(!NhapSP_Table.getSelectionModel().isSelectionEmpty()){ 
                boolean isOk = true;
                
                //ID sp_xuat
                int i = NhapSP_Table.getSelectedRow();
                TableModel model = NhapSP_Table.getModel();
                int id =(int) model.getValueAt(i, 0);
                //idSP
                String name = NameSP_TextField.getText();
                int idSP = SanPhamDAO.getIdByName(name);
                if(idSP == -1){
                    int yes_no = JOptionPane.showConfirmDialog(this, "Không tồn tại sản phẩm này trong kho\nBạn có muốn thêm sản phẩm mới vào kho ?","Thêm sản phẩm",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
                    if(yes_no == JOptionPane.YES_OPTION){
                        QLySanPham qlSanPham_View = new QLySanPham();
                        qlSanPham_View.setVisible(rootPaneCheckingEnabled);
                        qlSanPham_View.setDefaultCloseOperation(HIDE_ON_CLOSE);
                    }else isOk = false;
                }
                //Id phieuNhap
                int maPhieuNhap = Integer.parseInt(IdPhieuNhap_Label.getText());
                //quartity_in_new
                int quantity_in_new = Integer.parseInt( Quantity_In_TextField.getText());
                
                if(isOk){
                    int price = quantity_in_new * SanPhamDAO.getPriceById(idSP);  
                    SpNhap sp_px = SPNhapDAO.getById(id);
                    if(sp_px != null){
                        int rs = SPNhapDAO.update(id,quantity_in_new,price, idSP,maPhieuNhap);
                        if(rs == 1) JOptionPane.showMessageDialog(null,"Update thành công");
                        else JOptionPane.showMessageDialog(null,"Lõi");
                        Reload_View();
                    }else JOptionPane.showMessageDialog(null,"Ko tìm thấy sp_xuất mã id:"+id);
                }
            }else JOptionPane.showMessageDialog(null,"Vui lòng chọn ");
        }
        else JOptionPane.showMessageDialog(null,"Vui lòng nhập đủ thông tin");
    }//GEN-LAST:event_Update_ButtonActionPerformed

    private void NhapSP_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NhapSP_TableMouseClicked
        // TODO add your handling code here:
        int i = NhapSP_Table.getSelectedRow();
        TableModel model = NhapSP_Table.getModel();
        NameSP_TextField.setText(model.getValueAt(i,2).toString());
        Quantity_In_TextField.setText(model.getValueAt(i,3).toString());
    }//GEN-LAST:event_NhapSP_TableMouseClicked

    private void Excel_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Excel_ButtonActionPerformed
        // TODO add your handling code here:
        exportExcel(NhapSP_Table);
    }//GEN-LAST:event_Excel_ButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Nhap_SanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Nhap_SanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Nhap_SanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Nhap_SanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Nhap_SanPham().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DateIn_Label;
    private javax.swing.JButton Delete_Button;
    private javax.swing.JButton Excel_Button;
    private javax.swing.JLabel IdPhieuNhap_Label;
    private javax.swing.JButton Insert_Button;
    private javax.swing.JLabel MesSoLuong_Label;
    private javax.swing.JTextField NameSP_TextField;
    private javax.swing.JTable NhapSP_Table;
    private javax.swing.JTextField Quantity_In_TextField;
    private javax.swing.JLabel SumPayment_Label;
    private javax.swing.JButton Update_Button;
    private javax.swing.JLabel UserName_Label;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    // End of variables declaration//GEN-END:variables

}
